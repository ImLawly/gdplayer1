<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.16  |
    |              on 2025-05-18 20:27:33              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
Copyright @ 2020 - 2025 GDPlayer v4.7.1. https://gdplayer.to | https://t.me/gdplayerto
*/
 namespace GDPlayer; use Phpfastcache\Helper\Psr16Adapter; use Phpfastcache\Exceptions\{PhpfastcacheCoreException, PhpfastcacheDriverCheckException, PhpfastcacheDriverConnectException, PhpfastcacheDriverException, PhpfastcacheInvalidConfigurationException, PhpfastcacheIOException, PhpfastcacheRootException}; class CachePerformanceChecker { private Psr16Adapter $cache; private static ?self $instance = null; private static $availableDrivers = ["\146\151\x6c\x65\163"]; private string $driver = "\x66\151\x6c\x65\x73"; private int $testDuration = 1; private function __construct() { goto usDyB; dsaTv: if (!extension_loaded("\x70\x64\x6f\x5f\x73\161\x6c\151\x74\145")) { goto d6L8C; } goto l4rzY; Hrb8D: self::$availableDrivers[] = "\x6d\x65\x6d\143\141\143\150\145\144"; goto LGdiQ; usDyB: session_write_close(); goto dsaTv; U8YIw: if (!extension_loaded("\155\x65\x6d\x63\141\x63\150\145")) { goto dcNP6; } goto kzd1R; UN6FJ: self::$availableDrivers[] = "\162\x65\144\151\163"; goto d5xfJ; dUZ6w: if (!extension_loaded("\x72\x65\144\x69\163")) { goto KeuM9; } goto UN6FJ; AiNs8: dyWLK: goto hfAk1; LGdiQ: YcSy3: goto Ja7AG; Ho29W: dcNP6: goto wZ6RZ; wZ6RZ: if (!extension_loaded("\155\145\x6d\143\141\x63\x68\x65\144")) { goto YcSy3; } goto Hrb8D; l4rzY: self::$availableDrivers[] = "\163\x71\154\151\x74\x65"; goto JSR2y; JSR2y: d6L8C: goto dUZ6w; kzd1R: self::$availableDrivers[] = "\x6d\x65\x6d\x63\x61\143\x68\x65"; goto Ho29W; d5xfJ: KeuM9: goto U8YIw; Ja7AG: if (!(extension_loaded("\141\x70\x63\x75") && ini_get("\x61\x70\143\56\x65\156\x61\142\x6c\x65\x64"))) { goto dyWLK; } goto DMJ9n; DMJ9n: self::$availableDrivers[] = "\141\160\143\x75"; goto AiNs8; hfAk1: } public static function getInstance() : self { goto f6VX4; WDEQD: return self::$instance; goto lQT4Z; jy2uA: self::$instance = new self(); goto wMWf_; f6VX4: session_write_close(); goto tQdQl; tQdQl: if (!(self::$instance === null)) { goto QILKi; } goto jy2uA; wMWf_: QILKi: goto WDEQD; lQT4Z: } public static function setDriver(string $driver = "\x66\151\x6c\x65\x73") : void { goto ogH7i; ogH7i: session_write_close(); goto W01aW; CgFOc: try { self::getInstance()->cache = new Psr16Adapter($driver); } catch (PhpfastcacheCoreException|PhpfastcacheDriverCheckException|PhpfastcacheDriverConnectException|PhpfastcacheDriverException|PhpfastcacheInvalidConfigurationException|PhpfastcacheIOException|PhpfastcacheRootException|\Exception $e) { error_log("\x43\141\143\150\145\40\47{$driver}\x27\40\x45\x72\x72\157\162\72\40{$e->getMessage()}"); } goto paTTw; W01aW: self::getInstance()->driver = $driver; goto CgFOc; paTTw: } public static function getDriver() : string { session_write_close(); return self::getInstance()->driver; } public static function readTest() : float { goto ibs88; ibs88: session_write_close(); goto ngzpK; n2B0f: $iterations = 0; goto pVRna; hfiPC: $instance->cache->get($key); goto skVvG; skVvG: $iterations++; goto zktWf; wg8Y4: $instance->cache->clear(); goto zX_iQ; zktWf: goto LDksr; goto lpwwH; yzOAl: $key = bin2hex(random_bytes(4)); goto I0_rS; I0_rS: $instance->cache->clear(); goto BoQvv; pVRna: LDksr: goto K42pG; hmwqd: return 0; goto wGIj4; zX_iQ: return $iterations / $instance->testDuration; goto n9qzd; lpwwH: kJ1QO: goto wg8Y4; K42pG: if (!(microtime(true) < $startTime + $instance->testDuration)) { goto kJ1QO; } goto hfiPC; BoQvv: $instance->cache->set($key, random_bytes(128), 30); goto EBNWv; aLuth: if (in_array(strtolower($instance->driver), $instance->availableDrivers)) { goto gEnjo; } goto hmwqd; EBNWv: $startTime = microtime(true); goto n2B0f; ngzpK: $instance = self::getInstance(); goto aLuth; wGIj4: gEnjo: goto yzOAl; n9qzd: } public static function writeTest() : float { goto Zpkn7; LE8Ii: wVWyp: goto d62mJ; Zpkn7: session_write_close(); goto wamgP; YEKol: goto wVWyp; goto VfXDd; wamgP: $instance = self::getInstance(); goto t4lN_; pjtdW: return $iterations / $instance->testDuration; goto CHAHQ; x_B15: $iterations++; goto YEKol; VfXDd: wcpQE: goto XrXAJ; ahZ5P: $instance->cache->set(bin2hex(random_bytes(4)), random_bytes(128), 30); goto x_B15; t4lN_: if (in_array(strtolower($instance->driver), $instance->availableDrivers)) { goto oCAl7; } goto X3sNX; X3sNX: return 0; goto zuBe3; zuBe3: oCAl7: goto sBVCe; nocXK: $iterations = 0; goto LE8Ii; XrXAJ: $instance->cache->clear(); goto pjtdW; d62mJ: if (!(microtime(true) < $startTime + $instance->testDuration)) { goto wcpQE; } goto ahZ5P; sBVCe: $instance->cache->clear(); goto aTKG9; aTKG9: $startTime = microtime(true); goto nocXK; CHAHQ: } public static function missTest() : float { goto CSv5k; YxPlG: jYjL1: goto SqVqZ; UKj2T: Lx4dH: goto zPTFg; pQQWV: $instance->cache->get(bin2hex(random_bytes(4))); goto kg1zK; r1ve9: $startTime = microtime(true); goto asaxO; opKGo: return 0; goto iYWAG; SqVqZ: $instance->cache->clear(); goto M5hAK; ETPD_: goto Lx4dH; goto YxPlG; CSv5k: session_write_close(); goto qTjbr; kg1zK: $iterations++; goto ETPD_; zPTFg: if (!(microtime(true) < $startTime + $instance->testDuration)) { goto jYjL1; } goto pQQWV; M5hAK: return $iterations / $instance->testDuration; goto RP8f8; wuQnR: if (in_array(strtolower($instance->driver), $instance->availableDrivers)) { goto UWxXC; } goto opKGo; qTjbr: $instance = self::getInstance(); goto wuQnR; GecjV: $instance->cache->clear(); goto r1ve9; iYWAG: UWxXC: goto GecjV; asaxO: $iterations = 0; goto UKj2T; RP8f8: } public static function writeReadTest() : float { goto PQAla; hniZQ: qR70f: goto Llzvs; aeCeE: IUEz0: goto uqcIq; Os1To: return 0; goto aeCeE; shOMC: $instance->cache->get($key); goto rr7Xn; PgQFp: $instance = self::getInstance(); goto AYfBC; Lc6WO: goto QVn26; goto hniZQ; rr7Xn: $iterations++; goto Lc6WO; hn3Hv: $iterations = 0; goto l68ut; uqcIq: $instance->cache->clear(); goto we1dU; we1dU: $startTime = microtime(true); goto hn3Hv; Llzvs: $instance->cache->clear(); goto VP3Fa; l68ut: QVn26: goto ZWJJK; ZWJJK: if (!(microtime(true) < $startTime + $instance->testDuration)) { goto qR70f; } goto ShJp1; AYfBC: if (in_array(strtolower($instance->driver), $instance->availableDrivers)) { goto IUEz0; } goto Os1To; ShJp1: $key = bin2hex(random_bytes(4)); goto zGNEz; zGNEz: $instance->cache->set($key, random_bytes(128), 30); goto shOMC; PQAla: session_write_close(); goto PgQFp; VP3Fa: return $iterations / $instance->testDuration; goto T1TI5; T1TI5: } public static function attachTest() : float { goto zv1h4; RBd0D: Kf6eF: goto W9xtu; ULsyk: $instance->cache->clear(); goto IEtUs; lrc9b: return $iterations / $instance->testDuration; goto Kz4ar; glYTT: LoJ91: goto zeFUe; h3p_D: $retrievedData = $instance->cache->get($key); goto bllde; zY6bk: goto oiFJq; goto glYTT; t6hKl: $instance = self::getInstance(); goto buj2p; u_ZsA: $iterations = 0; goto INJ2s; eHIBK: return 0; goto jXOFF; zeFUe: $instance->cache->clear(); goto lrc9b; IEtUs: $instance->cache->set($key, $data, 30); goto TyHgb; jXOFF: J9KId: goto GYGPf; buj2p: if (in_array(strtolower($instance->driver), $instance->availableDrivers)) { goto J9KId; } goto eHIBK; GYGPf: $key = bin2hex(random_bytes(4)); goto QbgHv; QbgHv: $data = random_bytes(128); goto ULsyk; yXrmK: if (!(microtime(true) < $startTime + $instance->testDuration)) { goto LoJ91; } goto h3p_D; TyHgb: $startTime = microtime(true); goto u_ZsA; zv1h4: session_write_close(); goto t6hKl; INJ2s: oiFJq: goto yXrmK; Uml2o: error_log(sprintf("\x25\163\x3a\x20\104\x61\164\x61\40\155\151\163\155\141\x74\x63\150\40\x64\x65\x74\145\143\164\x65\144\x2e", self::getInstance()->driver)); goto RBd0D; W9xtu: $iterations++; goto zY6bk; bllde: if (!($retrievedData !== $data)) { goto Kf6eF; } goto Uml2o; Kz4ar: } }
