<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.16  |
    |              on 2025-05-18 20:27:34              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
Copyright @ 2020 - 2025 GDPlayer v4.7.1. https://gdplayer.to | https://t.me/gdplayerto
*/
 namespace GDPlayer; use GDPlayer\{Config, InstanceCache}; class Helper { private static $https = "\150\164\164\x70\163\x3a\x2f\57"; private static $http = "\x68\x74\164\160\72\57\57"; private static $curlInterface = ''; public static function getNextIpAddress() { goto G_lfD; ZMxEd: $ipAddress = $ipList[0]; goto Q1dk0; g6tn7: if (!$cache->isHit()) { goto zNEbT; } goto w4J_m; G_lfD: session_write_close(); goto EScio; uaSUy: $cache = InstanceCache::getItem($cacheKey); goto g6tn7; EScio: $ipList = is_array(EXTRA_IP) ? EXTRA_IP : [EXTRA_IP]; goto xtals; kNLED: return trim($ipAddress); goto fGJdV; u6uwe: $cache->set($ipAddress)->expiresAfter(CACHE_TIMEOUT)->addTag(OPTIONS_TAG); goto nAMOw; xtals: if (empty($ipList)) { goto JE9YV; } goto ZMxEd; OJKtK: $ipAddress = $ipList[$nextIndex]; goto BT1ow; JyyYt: $nextIndex = ($index + 1) % count($ipList); goto OJKtK; Q1dk0: $cacheKey = "\143\165\x72\x72\x65\x6e\164\55\151\x6e\x74\x65\x72\x66\141\x63\x65"; goto uaSUy; hpVXo: return ''; goto KJrhk; nAMOw: InstanceCache::save($cache); goto kNLED; w4J_m: $index = array_search($cache->get(), $ipList); goto JyyYt; fGJdV: JE9YV: goto hpVXo; BT1ow: zNEbT: goto u6uwe; KJrhk: } public static function getNetworkInterface() { session_write_close(); return self::$curlInterface; } public static function getCurlDefaultConfig($curl = null, int $timeout = 30, string $interface = '') { goto HDAeK; GJEnO: curl_setopt($curl, CURLOPT_DNS_SERVERS, "\70\56\x38\56\70\x2e\x38\54\x31\x2e\x31\x2e\61\56\61\x2c\x32\x32\x33\x2e\x35\x2e\x35\x2e\65\x2c\62\x30\x30\x31\72\64\70\x36\60\72\64\x38\x36\60\x3a\x3a\x38\x38\70\x38\54\62\66\x30\x36\72\x34\x37\60\60\72\x34\x37\x30\x30\x3a\x3a\61\61\61\61\x2c\x32\64\x30\x30\72\x33\x32\x30\x30\72\x3a\61"); goto CeirE; J48BH: curl_setopt($curl, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_1_1); goto GJEnO; CeirE: curl_setopt($curl, CURLOPT_DNS_CACHE_TIMEOUT, 180); goto OE0VY; h0MBc: curl_setopt($curl, CURLOPT_NOSIGNAL, true); goto WmEvp; bHGC7: curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true); goto r7s1z; MlGgC: curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false); goto XKAk9; HDAeK: session_write_close(); goto u98f9; r7s1z: curl_setopt($curl, CURLOPT_MAXREDIRS, 5); goto sTCG3; WCFRd: curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 0); goto MlGgC; fG7Yi: curl_setopt($curl, CURLOPT_INTERFACE, self::$curlInterface); goto LkBnc; BmdOn: curl_setopt($curl, CURLOPT_HTTP200ALIASES, [206, 301, 302]); goto m9X5n; XKAk9: curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); goto bHGC7; m9X5n: return $curl; goto q7WGD; OE0VY: curl_setopt($curl, CURLOPT_TCP_FASTOPEN, true); goto LYwIb; IqiSK: curl_setopt($curl, CURLOPT_TIMEOUT, $timeout); goto J48BH; LYwIb: curl_setopt($curl, CURLOPT_TCP_NODELAY, true); goto h0MBc; WmEvp: curl_setopt($curl, CURLOPT_FAILONERROR, true); goto BmdOn; u98f9: self::$curlInterface = !empty($interface) ? $interface : self::getNextIpAddress(); goto v1HM8; sTCG3: curl_setopt($curl, CURLOPT_ENCODING, ''); goto IqiSK; v1HM8: if (empty(self::$curlInterface)) { goto T0gGc; } goto fG7Yi; LkBnc: T0gGc: goto WCFRd; q7WGD: } public static function getHostOrigin(string $url = '', bool $origin = false) { goto SNq0F; MyOPx: return trim($result); goto TmoU7; E5Vsb: $result .= $urlParser["\150\157\x73\164"]; goto T57cl; SZ3gR: $result .= "\x3a" . $urlParser["\160\x6f\162\x74"]; goto BPgqD; VG_Ih: if (!isset($urlParser["\150\157\x73\x74"])) { goto NOeOj; } goto E5Vsb; V0jOi: return $result; goto e2Bga; SNq0F: session_write_close(); goto vEPIt; V3oaQ: $urlParser = parse_url(strtolower($url)); goto pyDyV; jAYQa: uFHeI: goto VG_Ih; CQEgn: if (!($origin && isset($urlParser["\x73\x63\x68\145\155\x65"]))) { goto uFHeI; } goto GtyIA; e2Bga: Ws1CY: goto CQEgn; GtyIA: $result .= $urlParser["\x73\x63\150\145\x6d\145"] . "\72\57\57"; goto jAYQa; T57cl: NOeOj: goto CdUo6; vEPIt: $result = ''; goto V3oaQ; CdUo6: if (!isset($urlParser["\160\x6f\x72\x74"])) { goto V_617; } goto SZ3gR; pyDyV: if ($urlParser) { goto Ws1CY; } goto V0jOi; BPgqD: V_617: goto MyOPx; TmoU7: } public static function getLabelNum(int $label = 0) { goto kHgAJ; kHgAJ: session_write_close(); goto C0dRq; L6wdZ: foreach ($thresholds as $value) { goto tiSsd; j4GC5: XfcLl: goto GSphB; tiSsd: if (!($label >= $value)) { goto XfcLl; } goto Lfnyu; GSphB: ek6q5: goto tcc8l; Lfnyu: $result = $value; goto fy45K; fy45K: goto Ip6F_; goto j4GC5; tcc8l: } goto RKs9R; RKs9R: Ip6F_: goto WySlx; fpLoO: $thresholds = [4000, 2000, 1400, 1200, 1100, 1000, 900, 800, 700, 600, 500, 400, 300, 200, 100]; goto L6wdZ; C0dRq: $result = $label; goto fpLoO; WySlx: return $result; goto V1_08; V1_08: } public static function reorderSources(array $sources = []) { goto obU1B; Qa9KQ: if (!empty($sources)) { goto wXJIq; } goto em_KG; YNepE: return $sources; goto goEio; tA04K: wXJIq: goto z1mzc; z1mzc: $replace = ["\104\145\146\141\x75\154\164" => 0, "\x4f\x72\151\x67\151\x6e\x61\154" => 10000, "\160" => '']; goto DsCzm; obU1B: session_write_close(); goto Qa9KQ; em_KG: return $sources; goto tA04K; DsCzm: usort($sources, static function ($x, $y) use($replace) { goto jb2QY; bJENC: return $x["\x6c\x61\x62\x65\154"] >= $y["\x6c\x61\142\145\154"] ? 1 : -1; goto Nwh0o; jb2QY: $x["\x6c\x61\x62\x65\x6c"] = (int) strtr($x["\x6c\x61\142\x65\x6c"], $replace); goto YlbNY; YlbNY: $y["\154\141\142\145\154"] = (int) strtr($y["\x6c\x61\x62\145\x6c"], $replace); goto bJENC; Nwh0o: }); goto YNepE; goEio: } public static function filterSources(array $sources = []) { goto QiXG5; WLOn7: if (!(count($sources) <= 1 || json_last_error() !== JSON_ERROR_NONE)) { goto a5QzV; } goto ZF1Dc; ZF1Dc: return $sources; goto zyxE8; Q4ONV: if (!empty($result)) { goto gMsxk; } goto G0wg7; zyxE8: a5QzV: goto MVhux; oC21C: return $result; goto EvWVV; HuuFM: foreach ($sources as $dt) { goto UD9id; yhhQh: oLVxi: goto rIhzr; kJjdC: if (in_array($label, $disableRes)) { goto ZJL7B; } goto Wb_Ap; f8aJf: ZJL7B: goto yhhQh; o0nz5: mXaIt: goto kJjdC; f81to: if (!is_numeric($label)) { goto mXaIt; } goto cVQB4; Wb_Ap: $dt["\144\145\146\141\165\x6c\164"] = $label === Config::get("\x64\x65\x66\x61\165\154\164\x5f\162\x65\x73\x6f\154\165\x74\x69\x6f\156"); goto SPH2D; cVQB4: $label = self::getLabelNum((int) $label); goto o0nz5; SPH2D: $result[] = $dt; goto f8aJf; UD9id: $label = rtrim($dt["\154\141\142\145\x6c"], "\x70"); goto f81to; rIhzr: } goto u69yR; MVhux: $result = []; goto HuuFM; QiXG5: session_write_close(); goto bMzE0; dlkqf: gMsxk: goto oC21C; u69yR: I2bQK: goto Q4ONV; G0wg7: $result = $sources; goto dlkqf; bMzE0: $disableRes = json_decode(Config::get("\x64\151\163\141\x62\154\145\137\162\145\x73\x6f\x6c\165\164\151\157\x6e") ?? "\x5b\135"); goto WLOn7; EvWVV: } public static function replaceURLScheme(string $url = '') { goto LDiCr; LDiCr: session_write_close(); goto nO838; AfAsB: return str_replace([self::$https, self::$http], $scheme, $url); goto oDaW4; nO838: $scheme = isSSL() ? self::$https : self::$http; goto AfAsB; oDaW4: } public static function removeURLScheme(string $url = '') { session_write_close(); return str_replace([self::$https, self::$http], '', $url); } public static function changeDatatablesDateTimeFormat(?int $timestamp = null, string $format = "\x4d\40\x64\54\40\131\x20\x48\x3a\x69") { session_write_close(); return date($format, $timestamp) ?: ''; } public static function getServerIp() { goto Nc4zi; Go_4I: curl_close($ch); goto jji7t; tIjR7: $response = curl_exec($ch); goto Go_4I; gFmFF: return trim($cache->get()); goto sZsT4; PAHcj: return $result; goto MX6G5; vygU8: $cache->set($result)->expiresAfter(60)->addTag(OPTIONS_TAG); goto GvKkT; B00nd: $cache = InstanceCache::getItem("\x69\160\x5f\x73\x65\162\x76\x65\162"); goto Twu_l; zxozd: return ''; goto WDlh8; dRv8h: $ch = self::getCurlDefaultConfig(curl_init()); goto Aa2Xa; GvKkT: InstanceCache::save($cache); goto PAHcj; Aa2Xa: curl_setopt($ch, CURLOPT_URL, "\x68\164\x74\160\x73\x3a\57\x2f\x63\150\145\143\x6b\x69\160\56\141\x6d\141\172\157\x6e\x61\167\163\x2e\x63\157\155\x2f"); goto GzKBj; RcOgJ: curl_setopt($ch, CURLOPT_IPRESOLVE, CURL_IPRESOLVE_V4); goto tIjR7; Nc4zi: session_write_close(); goto B00nd; sZsT4: a_qbi: goto dRv8h; hiGl3: $result = trim($response); goto vygU8; Twu_l: if ($cache->isEmpty()) { goto a_qbi; } goto gFmFF; MX6G5: DN1b4: goto zxozd; jji7t: if (empty($response)) { goto DN1b4; } goto hiGl3; GzKBj: curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); goto RcOgJ; WDlh8: } public static function bypassRateLimit($ip = null) { goto swuwt; aEOm6: $result = []; goto XoGwg; eTa19: if (validateIp($ip)) { goto rmpZz; } goto QTvrR; QTvrR: $serverIp = self::getServerIp(); goto g8MeH; EPH1X: $result[] = "\x52\105\x4d\117\124\105\x2d\x48\117\x53\124\72\40" . $proxy; goto swu3u; HFF3u: createErrorLog([__FILE__, __FUNCTION__, "\x49\x6e\166\141\154\x69\144\40\x73\145\162\166\145\x72\x20\x49\120\72\x20" . $serverIp]); goto fa4pK; lPqhm: goto L_3O2; goto Eaoxi; UShXN: goto T7uB6; goto NzA87; JQiZq: $result[] = "\130\x2d\x52\x65\x61\154\55\111\120\72\x20" . $proxy; goto Nslio; jGgha: return $result; goto MLy7j; g8MeH: $ex = explode("\x2e", $serverIp); goto LWdKY; MuldD: $proxy = $ip; goto FvIGu; NzA87: O8rHg: goto RzeU3; LWdKY: if (count($ex) === 4) { goto O8rHg; } goto HFF3u; FvIGu: L_3O2: goto aEOm6; Un3BC: $proxy = implode("\56", $ex) . "\56" . random_int(0, 255); goto AQDoV; XoGwg: if (!validateIp($proxy)) { goto HgvOB; } goto EPH1X; Nslio: HgvOB: goto jGgha; Eaoxi: rmpZz: goto MuldD; AQDoV: T7uB6: goto lPqhm; RzeU3: array_pop($ex); goto Un3BC; swuwt: session_write_close(); goto eTa19; swu3u: $result[] = "\x58\x2d\106\x6f\162\167\x61\162\x64\145\144\55\x46\x6f\162\72\x20" . $proxy; goto JQiZq; fa4pK: return []; goto UShXN; MLy7j: } public static function createCacheDir(string $vHost = '', string $vID = '', string $vUrl = '', string $range = '') { goto OZcxK; y82G2: $arrayPath[] = trim(substr(keyFilter($vID), -200)); goto ydEhY; Tj1ZD: GBRSv: goto cqSjd; KDR_S: azjjw: goto nvCCj; Qg0nS: $hashFile = createHash(self::removeURLScheme($vUrl)); goto XSToc; NdNoO: $arrayPath[] = trim($range, "\x2d"); goto Tj1ZD; nvCCj: $path = implode(SLASH, $arrayPath); goto B0Tgk; ux9pO: if (empty($vHost)) { goto T8zLw; } goto WhF50; QBxVb: $vID = createHash($vID); goto hPkFA; ymBX9: if (!validateUrl($vID)) { goto q3oUF; } goto QBxVb; Fvaay: T8zLw: goto ymBX9; WhF50: $arrayPath[] = $vHost; goto Fvaay; B0Tgk: return normalizeSeparator(rtrim(CACHE_PATH . "\x66\x69\x6c\x65\x73\x2f" . $path, SLASH)); goto aYDqj; hPkFA: q3oUF: goto y82G2; YcB1r: $arrayPath = []; goto ux9pO; XSToc: $arrayPath[] = substr($hashFile, 0, 2); goto yDbnr; OZcxK: session_write_close(); goto YcB1r; ydEhY: if (empty($range)) { goto GBRSv; } goto NdNoO; yDbnr: $arrayPath[] = $hashFile; goto KDR_S; cqSjd: if (empty($vUrl)) { goto azjjw; } goto Qg0nS; aYDqj: } public static function decryptData($data = null) { goto b84Pp; tmx2U: el9WO: goto sSxSI; lNwkr: $decrypt = decode($data); goto doXlp; MeuMx: if ($decrypt) { goto el9WO; } goto ZBIDO; flo_Z: goto ZF23y; goto hE5l2; lFK6l: $qry = []; goto MeuMx; hE5l2: uJf2O: goto lCSC3; JZi1g: goto ZF23y; goto tmx2U; doXlp: $security = new \GDPlayer\Security(); goto ufML6; ZBIDO: if ($decrypt2) { goto uJf2O; } goto JZi1g; uBhg_: return !empty($qry["\x69\144"]) ? $qry : []; goto udyB_; hUpWu: ZF23y: goto uBhg_; lCSC3: parse_str($decrypt2, $qry); goto hUpWu; sSxSI: parse_str($decrypt, $qry); goto flo_Z; ufML6: $decrypt2 = $security->decryptURL($data); goto lFK6l; b84Pp: session_write_close(); goto lNwkr; udyB_: } public static function filmstripParser($filmstrip = null) { goto twwDV; jp2tZ: $result = ''; goto ssKx8; lWwea: rChmt: goto hjM_9; GKfI1: $result = getLoadBalancerRand() . "\146\151\154\155\x73\164\x72\x69\x70\x2f" . $security->encryptURL($filmstrip) . "\x2e\x76\164\164"; goto lWwea; hgNe6: $security = new \GDPlayer\Security(); goto GKfI1; twwDV: session_write_close(); goto jp2tZ; ssKx8: if (!validateUrl($filmstrip)) { goto rChmt; } goto hgNe6; hjM_9: return $result; goto WYgR1; WYgR1: } public static function posterParser($poster = null) { goto ToeXl; ZQlDD: $result = ''; goto obPOh; Hc02m: MuDW7: goto yw6ZM; UelOL: if (!empty($poster)) { goto ol9MZ; } goto gSvXl; yw6ZM: return $result; goto eBfuC; xIdqa: $result .= in_array(strtolower($ext), $validExtensions) ? "\x2e" . strtolower($ext) : "\x2e\x6a\x70\147"; goto Hc02m; url9R: $result = getLoadBalancerRand() . "\160\x6f\163\x74\x65\162\57" . $security->encryptURL($poster); goto k67Kc; IiOTj: ol9MZ: goto ZQlDD; mpB6x: if (file_exists($posterFile)) { goto ijZBR; } goto dePWu; gK352: $security = new \GDPlayer\Security(); goto ENA99; MlwMn: $result = strtr($posterFile, ["\134" => SLASH]); goto hCo4W; obPOh: $posterFile = IMAGES_PATH . basename($poster); goto mpB6x; dePWu: if (validateUrl($poster)) { goto mAv3N; } goto iXCWu; ToeXl: session_write_close(); goto UelOL; iXCWu: goto MuDW7; goto kubvM; gSvXl: return ''; goto IiOTj; k67Kc: $validExtensions = ["\152\x70\147", "\152\x70\x65\x67", "\160\x6e\x67", "\x77\x65\142\x70", "\142\155\160"]; goto xIdqa; kubvM: ijZBR: goto MlwMn; zXiHi: mAv3N: goto gK352; ENA99: $ext = pathinfo(parse_url($poster, PHP_URL_PATH), PATHINFO_EXTENSION); goto url9R; dr1z4: goto MuDW7; goto zXiHi; hCo4W: $result = strtr($result, [normalizeSeparator(BASE_DIR) => BASE_URL]); goto dr1z4; eBfuC: } public static function subtitleParser($subtitle = null) { goto oBL1l; YEqFs: if (!($ext !== "\166\164\x74")) { goto ovUT5; } goto mvz2I; tZ3qO: if (file_exists(SUBTITLES_PATH . $basename)) { goto Dvsqo; } goto tnFJc; ad22y: goto GSuRI; goto GNwTd; XjVSe: Y16aE: goto wRXcQ; Yg60i: goto GSuRI; goto Nyz_5; GNwTd: Dvsqo: goto GK8ay; oBL1l: session_write_close(); goto V3Dj6; Puqus: $result = $loadBalancerUrl . $security->encryptURL($subtitle) . "\x2e\166\x74\x74"; goto s7btY; tnFJc: if (validateUrl($subtitle)) { goto PlofY; } goto ad22y; GK8ay: $ext = pathinfo($basename, PATHINFO_EXTENSION); goto YEqFs; Zwwi4: return $result; goto ZBCir; tVcFk: $basename = basename($subtitle); goto HAHki; mvz2I: $result = $loadBalancerUrl . $security->encryptURL(SUBTITLES_BASEURL . $basename) . "\56\166\164\164"; goto kIXLI; V3Dj6: $result = ''; goto Txqyb; TSFfn: return $result; goto XjVSe; s7btY: GSuRI: goto Zwwi4; wRXcQ: $security = new \GDPlayer\Security(); goto tVcFk; Nyz_5: PlofY: goto Puqus; Txqyb: if (!empty($subtitle)) { goto Y16aE; } goto TSFfn; HAHki: $loadBalancerUrl = getLoadBalancerRand() . "\163\x75\x62\164\x69\x74\x6c\x65\57"; goto tZ3qO; kIXLI: ovUT5: goto Yg60i; ZBCir: } }
