<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.16  |
    |              on 2025-05-18 20:27:33              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
Copyright @ 2020 - 2025 GDPlayer v4.7.1. https://gdplayer.to | https://t.me/gdplayerto
*/
 namespace GDPlayer\Ajax; use GDPlayer\Hosting; use GDPlayer\Model\{Subtitle, Video, VideoAlternative}; class VideoExport extends \GDPlayer\Ajax { private Hosting $hosting; private Subtitle $sub; private VideoAlternative $vAlt; private Video $videos; private $csvRows = []; private $exportDir; private $totalSubtitleUrls = 0; private $totalVideoUrls = 0; private const MESSAGE_VIDEO_EXPORT_SUCCESS = "\x54\x68\x65\40\166\151\144\145\157\40\x6c\x69\x73\164\x20\150\141\x73\x20\142\x65\145\x6e\x20\x65\170\x70\157\x72\x74\145\x64\40\x73\x75\x63\x63\145\x73\x73\146\165\154\154\x79"; private const MESSAGE_VIDEO_EXPORT_FAIL = "\126\x69\144\145\157\x20\154\151\x73\164\40\146\x61\151\154\x65\x64\40\164\157\40\145\x78\160\x6f\x72\x74"; public function __construct() { goto QRNBd; zjqtH: $this->exportDir = UPLOADS_PATH . "\x65\170\x70\157\162\x74\x2f"; goto DsZ2i; QRNBd: session_write_close(); goto zxfFZ; XfGEP: $this->loadData(); goto zjqtH; zxfFZ: $this->data = array_merge($_POST, $_GET); goto w1I_F; w1I_F: $this->files = $_FILES; goto XfGEP; DsZ2i: $this->hosting = new Hosting(); goto BZVJO; yBv0v: $this->sub = Subtitle::getInstance(); goto zlGjO; BZVJO: $this->vAlt = VideoAlternative::getInstance(); goto yBv0v; zlGjO: $this->videos = Video::getInstance(); goto Ip5FB; Ip5FB: createDir($this->exportDir); goto XdS4E; XdS4E: } public function response() { session_write_close(); return $this->defaultResponse($this); } private function exportAlternatives(int $id = 0) { goto j7gWT; SkzlG: $result = []; goto uBZbD; gVvbD: $list = $this->vAlt->get(["\150\x6f\163\164", "\150\157\163\x74\x5f\151\x64"]); goto FPnye; uBZbD: $this->vAlt->setCriteria("\166\151\x64", $id); goto gVvbD; a7uWF: foreach ($list as $dt) { goto YdJHD; tPYJI: $result[] = $this->hosting->getDownloadLink(); goto oVZ27; YdJHD: $this->hosting->setHost($dt["\x68\157\x73\x74"]); goto Nn5tA; oVZ27: T1Qiv: goto cdqT0; Nn5tA: $this->hosting->setID($dt["\x68\x6f\163\x74\x5f\151\144"]); goto tPYJI; cdqT0: } goto oBq_g; FPnye: if (!$list) { goto acIeC; } goto a7uWF; NnRv2: return $result; goto vI1QB; j7gWT: session_write_close(); goto SkzlG; aYbK9: acIeC: goto NnRv2; oBq_g: Fnw6S: goto aYbK9; vI1QB: } private function exportSubtitles(int $id = 0) { goto w9ELl; XRntW: $result = ["\154\x61\x62\x65\x6c\x73" => [], "\165\162\x6c\163" => []]; goto qMEWX; qMEWX: $this->sub->setCriteria("\x76\151\x64", $id); goto R3dQa; R3dQa: $list = $this->sub->get(["\154\141\x6e\x67\x75\141\x67\x65", "\x6c\151\156\153"]); goto uBj7v; EogTR: wtuqB: goto Z9a4h; QKtmY: foreach ($list as $dt) { goto OiedN; OiedN: $result["\154\x61\142\145\x6c\163"][] = $dt["\x6c\x61\x6e\147\x75\x61\x67\x65"]; goto U_mPE; nOwGo: FhDN0: goto WiER4; U_mPE: $result["\x75\x72\154\163"][] = $dt["\x6c\151\x6e\153"]; goto nOwGo; WiER4: } goto Zrf_K; w9ELl: session_write_close(); goto XRntW; Z9a4h: return $result; goto U8zrX; Zrf_K: Mo68S: goto EogTR; uBj7v: if (!$list) { goto wtuqB; } goto QKtmY; U8zrX: } private function createHeader() { goto otHEc; Qu2r6: $header = array_merge(["\164\151\164\x6c\x65", "\x73\154\x75\147", "\160\x6f\163\164\x65\162"], array_fill(0, $this->totalVideoUrls, "\x76\x69\144\145\157\x5f\165\162\154")); goto p0Nux; UYeVQ: $i++; goto QpxuV; zdM4w: BCfOR: goto UYeVQ; wqBq9: $header[] = "\x73\165\x62\x74\151\x74\154\x65\x5f\154\141\x62\145\154"; goto y0tV2; QpxuV: goto nlQX6; goto UKbf5; otHEc: session_write_close(); goto Qu2r6; UMDrz: return $header; goto JI6q5; wgzny: if (!($i < $this->totalSubtitleUrls)) { goto jFfTo; } goto wqBq9; p0Nux: $i = 0; goto AOkKe; AOkKe: nlQX6: goto wgzny; UKbf5: jFfTo: goto UMDrz; y0tV2: $header[] = "\163\x75\x62\x74\151\164\154\145\137\x75\x72\x6c"; goto zdM4w; JI6q5: } private function createCsvRow(array $row = [], int $cHeader = 0, int $firstSubLabelHeader = 0, int $firstSubUrlHeader = 0) { goto po8sZ; gVtTp: aadQP: goto JyTsV; dFeXq: $i++; goto cYnNa; M2lFC: $data[$firstSubLabelHeader + $xxx] = $subLabels[$i] ?? ''; goto iBY_K; vXQGs: return $data; goto R5_AK; po8sZ: session_write_close(); goto ZZViN; Nyhju: $subUrls = []; goto L8dUw; cYnNa: goto aadQP; goto FlIzo; a2rPo: ia11M: goto ac0hM; ac0hM: $i = 0; goto gVtTp; ZZViN: $subLabels = []; goto Nyhju; FlIzo: PM5t8: goto vXQGs; iBY_K: $data[$firstSubUrlHeader + $xxx] = $subUrls[$i] ?? ''; goto C7Szn; L8dUw: $data = array_fill(0, $cHeader, null); goto mLtTj; mLtTj: foreach ($row as $k => $v) { goto a1Fmf; dFo5Z: goto IeIkm; goto sySOd; G74a1: goto IeIkm; goto wH5q8; hKq_n: goto IeIkm; goto TTNQ9; Zfw7T: goto IeIkm; goto MVCPF; MVCPF: rY9ur: goto pvhZQ; d5VjF: IeIkm: goto qlzpc; a1Fmf: if ($k === "\164\151\164\x6c\x65") { goto VR3Vb; } goto fqkBl; fqkBl: if ($k === "\x73\x6c\x75\x67") { goto O39fI; } goto hYGxU; hYGxU: if ($k === "\x70\x6f\x73\x74\145\x72") { goto dRtQ6; } goto f62QE; hT4jf: ss0Gr: goto G74a1; wH5q8: aMHMe: goto PtzjE; WG99Q: $data[1] = $v; goto sdH0i; qlzpc: LtFzs: goto uk1CU; uKD0y: dRtQ6: goto CyB_w; dm95S: $data[0] = $v; goto dFo5Z; PtzjE: $subLabels = array_merge($subLabels, $v); goto Zfw7T; pvhZQ: $subUrls = array_merge($subUrls, $v); goto d5VjF; sdH0i: goto IeIkm; goto uKD0y; Z07GA: if ($k === "\x73\x75\x62\164\151\x74\154\x65\137\165\x72\154") { goto rY9ur; } goto fM5Ui; TTNQ9: r1jR1: goto X0Kor; fM5Ui: goto IeIkm; goto Lyord; X0Kor: foreach ($v as $i => $vx) { $data[$i + 3] = $vx; qOgRy: } goto hT4jf; Lyord: VR3Vb: goto dm95S; f62QE: if ($k === "\166\151\x64\x65\x6f\x5f\165\x72\154") { goto r1jR1; } goto t1sSz; t1sSz: if ($k === "\163\165\142\164\x69\x74\154\x65\137\154\141\x62\145\154") { goto aMHMe; } goto Z07GA; CyB_w: $data[2] = $v; goto hKq_n; sySOd: O39fI: goto WG99Q; uk1CU: } goto a2rPo; JyTsV: if (!($i < $this->totalSubtitleUrls)) { goto PM5t8; } goto w1rKj; C7Szn: Hu3e0: goto dFeXq; w1rKj: $xxx = $i * 2; goto M2lFC; R5_AK: } private function createFile() { goto y614V; ZDJUU: fclose($csvFile); goto S1g_d; z3YEf: $header = $this->createHeader(); goto YABRG; y614V: session_write_close(); goto z3YEf; dk8lo: $file = $this->exportDir . sprintf("\145\170\x70\x6f\x72\164\x2d\45\x64\56\143\x73\x76", date("\x59\x6d\x64\110\151")); goto hAqLv; hAqLv: @unlink($file); goto F17ua; NbI_b: fputcsv($csvFile, $header); goto Eu1s4; YABRG: $cHeader = count($header); goto U2s1C; Eu1s4: foreach ($this->csvRows as $row) { goto d1dvG; d1dvG: $data = $this->createCsvRow($row, $cHeader, $firstSubLabelHeader, $firstSubUrlHeader); goto XuMz3; XkCyf: avRUT: goto vX5d4; XuMz3: fputcsv($csvFile, $data); goto XkCyf; vX5d4: } goto TvJR3; S1g_d: return strtr($file, [BASE_DIR => BASE_URL]); goto azuuW; F17ua: $csvFile = fopen($file, "\x77"); goto NbI_b; U2s1C: $firstSubLabelHeader = array_search("\163\165\x62\164\x69\x74\154\145\137\x6c\141\x62\145\154", $header); goto JLPFg; TvJR3: yAMxE: goto ZDJUU; JLPFg: $firstSubUrlHeader = array_search("\163\165\x62\x74\151\164\x6c\145\137\165\162\154", $header); goto dk8lo; azuuW: } protected function exportAsCSV() { goto pug2W; pug2W: session_write_close(); goto r1CsB; xcE9w: return $result; goto fj_Ar; sE9OG: foreach ($list as $dt) { goto fEjvV; XUilf: array_unshift($data["\166\151\144\x65\x6f\137\165\x72\x6c"], $this->hosting->getDownloadLink()); goto MzbnL; YBkAf: if (!($subUrl > $this->totalSubtitleUrls)) { goto W16qN; } goto jqO7_; jqO7_: $this->totalSubtitleUrls = $subUrl; goto m7Uli; k96xR: sv0_c: goto gXgdU; Eftvz: $this->hosting->setHost($dt["\150\157\x73\164"]); goto cCeWI; kbUZh: $this->csvRows[] = $data; goto k96xR; dtJsR: if (!($videoUrl > $this->totalVideoUrls)) { goto PSc4A; } goto s9pxO; fEjvV: $subs = $this->exportSubtitles($dt["\151\144"]); goto TNdNN; kEX4N: PSc4A: goto kbUZh; s9pxO: $this->totalVideoUrls = $videoUrl; goto kEX4N; NOqq1: $videoUrl = count($data["\166\151\x64\145\157\137\165\162\154"]); goto dtJsR; cCeWI: $this->hosting->setID($dt["\150\157\163\x74\137\x69\144"]); goto XUilf; m7Uli: W16qN: goto NOqq1; TNdNN: $data = ["\160\157\163\x74\x65\x72" => $dt["\x70\x6f\x73\164\x65\162"], "\x73\x6c\165\x67" => $dt["\x73\x6c\x75\x67"], "\x73\165\142\x74\x69\164\x6c\x65\137\x6c\x61\142\x65\x6c" => $subs["\x6c\x61\x62\145\x6c\163"], "\163\x75\x62\x74\151\x74\154\x65\x5f\x75\162\x6c" => $subs["\x75\x72\x6c\x73"], "\x74\x69\x74\154\145" => $dt["\164\151\164\154\145"], "\x76\151\144\145\157\137\x75\162\x6c" => $this->exportAlternatives($dt["\x69\144"])]; goto Eftvz; MzbnL: $subUrl = count($data["\x73\x75\x62\x74\x69\x74\x6c\145\137\165\x72\154"]); goto YBkAf; gXgdU: } goto LM3BN; ithfA: if (!$list) { goto C69z2; } goto sE9OG; PbhJL: $result = $this->toJson(1, self::MESSAGE_VIDEO_EXPORT_SUCCESS, $downloadUrl); goto OF0a5; xEZQs: $list = $this->videos->rawFetchAll(sprintf("\x53\105\114\x45\103\124\40\140\x69\x64\140\54\x60\164\151\x74\154\145\x60\x2c\140\150\x6f\163\164\x60\54\x60\x68\157\163\164\137\x69\144\x60\54\140\x70\x6f\x73\x74\145\162\x60\x2c\140\x73\154\165\147\x60\40\x46\122\x4f\x4d\x20\140\x25\163\x60\40\x57\110\x45\x52\105\x20\151\x64\40\111\116\40\50\x25\x73\x29", $this->videos->getTableName(), trim($this->data["\x69\x64\163"], "\54"))); goto ithfA; LM3BN: gsG6Z: goto IjqsJ; nK50F: if (!empty($this->data["\x69\x64\163"])) { goto dzjNx; } goto EnRH3; r1CsB: $result = $this->toJson(0, self::MESSAGE_VIDEO_EXPORT_FAIL); goto nK50F; EnRH3: return $result; goto LJN55; OF0a5: C69z2: goto xcE9w; IjqsJ: $downloadUrl = $this->createFile(); goto PbhJL; LJN55: dzjNx: goto xEZQs; fj_Ar: } }
