<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.16  |
    |              on 2025-05-18 20:27:38              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
Copyright @ 2020 - 2025 GDPlayer v4.7.1. https://gdplayer.to | https://t.me/gdplayerto
*/
 namespace GDPlayer; use GDPlayer\Helper; class SubtitleConverter { protected $content = ''; protected $sourceTypes = ["\x79\x6f\165\164\x75\142\145"]; public function loadFromFile(string $file = '') { session_write_close(); $this->content = getFileContent($file); } public function loadFromURL(string $url = '') { goto OrBy4; ei6bf: goto RBcN2; goto JRsj8; WT_a4: if (empty($err)) { goto r739f; } goto U4BCq; gzDv0: RBcN2: goto RueHM; GBqjD: if (!validateUrl($url)) { goto Ct9oL; } goto kwSE3; U4BCq: createErrorLog([__FILE__, __FUNCTION__, $url, $err]); goto ei6bf; OrBy4: session_write_close(); goto GBqjD; irnHb: curl_setopt($ch, CURLOPT_URL, $url); goto GjtHh; JRsj8: r739f: goto y5dY3; kwSE3: $ch = Helper::getCurlDefaultConfig(curl_init()); goto irnHb; kVY1n: curl_close($ch); goto WT_a4; y5dY3: $this->content = $response; goto gzDv0; RueHM: Ct9oL: goto ClUpa; GjtHh: curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "\x47\x45\x54"); goto UUH_G; UUH_G: $response = curl_exec($ch); goto u1m6S; u1m6S: $err = curl_error($ch); goto kVY1n; ClUpa: } public function loadContent(string $content = '') { session_write_close(); $this->content = $content; } protected function internalTimeToVtt(string $internal_time = '') { goto Adf6f; o_8b9: $parts = explode("\56", $internal_time); goto B8665; z5pBc: $decimal = isset($parts[1]) ? substr($parts[1], 0, 3) : 0; goto AbAn3; AbAn3: return gmdate("\110\72\x69\72\163", floor($whole)) . "\56" . str_pad($decimal, 3, "\x30", STR_PAD_RIGHT); goto bYwE5; Adf6f: session_write_close(); goto o_8b9; B8665: $whole = $parts[0]; goto z5pBc; bYwE5: } protected function youtubeToVTT() { goto vbCv9; JkhVf: $result = ''; goto sP1a4; Co8L4: avHfn: goto OJzkR; nYVoH: return $result; goto N2WQF; vbCv9: session_write_close(); goto JkhVf; OJzkR: $list = $xml->text; goto OTx0f; Qyrep: hK1Oh: goto nYVoH; yxADC: return $result; goto Co8L4; PCcvd: if ($xml) { goto avHfn; } goto yxADC; sP1a4: $xml = @simplexml_load_string($this->content); goto PCcvd; OTx0f: foreach ($list as $text) { goto cLTBV; cLTBV: $end = $this->internalTimeToVtt(floatval($text->attributes()->start) + floatval($text->attributes()->dur)); goto pOTYt; Sq9IV: $result .= $text . "\xa\12"; goto GaW7J; GaW7J: wFKbb: goto RRj1O; pOTYt: $result .= $this->internalTimeToVtt($text->attributes()->start) . "\40\x2d\55\76\x20{$end}\12"; goto Sq9IV; RRj1O: } goto Qyrep; N2WQF: } public function convertToVTT(string $sourceType = '') { goto Lp4TK; kYXmI: if (!($sourceType === "\x79\x6f\x75\x74\x75\x62\145")) { goto vt2aK; } goto twN9e; twN9e: $result .= $this->youtubeToVTT(); goto GlHy1; GlHy1: vt2aK: goto rnXiJ; Uh_gg: $result = "\127\105\102\126\x54\x54\12\12"; goto w0_Mg; rnXiJ: return $result; goto CoJyO; Lp4TK: session_write_close(); goto Uh_gg; fVXQF: return $result; goto iwr96; iwr96: jFZBp: goto kYXmI; w0_Mg: if (!(empty($this->content) || empty($sourceType) || !in_array($sourceType, $this->sourceTypes))) { goto jFZBp; } goto fVXQF; CoJyO: } }
