<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.16  |
    |              on 2025-05-18 20:27:36              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
Copyright @ 2020 - 2025 GDPlayer v4.7.1. https://gdplayer.to | https://t.me/gdplayerto
*/
 namespace GDPlayer; use GeoIp2\Database\Reader; use GeoIp2\Exception\{AddressNotFoundException, InvalidRequestException}; use GDPlayer\Helper; use Exception; class Maxmind { private static ?self $instance = null; private Reader $reader; private Reader $reader2; private function __construct() { goto iNx2f; vfqMs: $this->reader = new Reader(MAXMIND_FILE); goto Uifaq; Uifaq: $this->reader2 = new Reader(MAXMIND_COUNTRY_FILE); goto UgDdf; iNx2f: session_write_close(); goto vfqMs; UgDdf: } public static function getInstance() : self { goto W2m9V; upPSE: ciCkr: goto XBha5; XBha5: return self::$instance; goto k5z38; gAE66: self::$instance = new self(); goto upPSE; W2m9V: session_write_close(); goto rcODg; rcODg: if (!(self::$instance === null)) { goto ciCkr; } goto gAE66; k5z38: } private function downloadMaxMindDatabase(string $saveToFile = '', string $download = "\x41\x53\x4e") { goto A8dYF; aYQiY: $cacheKey = "\155\141\170\x6d\x69\156\x64\137\x75\160\x64\x61\164\x65\144\x5f" . $download; goto DZ1MG; LgtgG: fclose($fp); goto vNPyU; Bi4fE: return $saveToFile; goto tCpMQ; Gia1q: $url = "\150\x74\x74\160\x73\72\x2f\x2f\144\x6f\167\156\154\x6f\141\144\56\155\141\x78\155\151\156\x64\x2e\x63\x6f\x6d\57\141\x70\160\57\147\x65\157\151\x70\137\144\x6f\167\x6e\x6c\x6f\x61\x64\77\145\144\151\164\x69\157\x6e\137\151\144\75\107\x65\157\114\x69\164\x65\62\x2d{$download}\46\x6c\151\x63\x65\156\x73\x65\x5f\x6b\x65\171\75{$key}\46\x73\x75\146\146\x69\170\x3d\x74\141\162\56\x67\172"; goto Kkowq; Xwsou: curl_exec($ch); goto FN36q; FN36q: curl_close($ch); goto LgtgG; uOGox: $ch = Helper::getCurlDefaultConfig(curl_init()); goto E1SDR; rUSUx: curl_setopt($ch, CURLOPT_FILE, $fp); goto Xwsou; tCpMQ: h5Fg_: goto Ofb3z; UOB3L: return false; goto WeuTe; Ofb3z: eK0MC: goto UOB3L; E1SDR: curl_setopt($ch, CURLOPT_URL, $url); goto CZC4n; O0asJ: if (!($fp = @fopen($saveToFile, "\167\x62"))) { goto h5Fg_; } goto uOGox; Kkowq: openResourcesHandler(); goto O0asJ; ycb5_: $day = date("\x6c"); goto NPyHL; A8dYF: session_write_close(); goto cn9cr; DZ1MG: $key = Config::get("\x6d\141\x78\x6d\x69\156\144\137\154\x69\x63\x65\x6e\163\145\x5f\153\x65\x79"); goto ycb5_; cn9cr: set_time_limit(0); goto aYQiY; vNPyU: setOption($cacheKey, date("\131\55\155\55\x64")); goto Bi4fE; NPyHL: if (!(!empty($key) && Config::get($cacheKey) !== date("\131\55\155\55\144") && ($day === "\x54\x68\165\162\163\x64\x61\171" || $day === "\106\162\x69\144\x61\x79"))) { goto eK0MC; } goto Gia1q; CZC4n: curl_setopt($ch, CURLOPT_BUFFERSIZE, SMALL_BUFFER_SIZE); goto rUSUx; WeuTe: } private function saveMaxMindDatabase(string $dir = '', string $download = "\101\123\x4e", bool $openDir = false) : bool { goto kjz4i; rOkO8: j2Bpn: goto tkLO4; sZssf: $handle = @opendir($dir); goto k0yAR; kjz4i: session_write_close(); goto jiScT; S1hih: openResourcesHandler(); goto sZssf; Rzxze: $downloadFile = $download !== "\101\x53\x4e" ? MAXMIND_COUNTRY_FILE : MAXMIND_FILE; goto S1hih; dziQ9: if (!(($entry = readdir($handle)) !== false)) { goto M86jP; } goto rdZ_F; ES1He: IZQto: goto EXjkH; dzdKo: M86jP: goto pdnH5; pdnH5: closedir($handle); goto UDxob; vllxh: goto M86jP; goto WVRd_; GjZvC: if (!$result) { goto CN4Qi; } goto z0W70; fqAC1: JIXcQ: goto dziQ9; z0W70: $mxDir = BIN_PATH . "\x6d\141\170\x6d\x69\156\x64\x2f" . strtolower($download); goto XhhEC; Xihhu: goto j2Bpn; goto ES1He; ZJhRB: CN4Qi: goto s0Dci; FO_r5: deleteDir($dir); goto ZJhRB; GVr5q: @unlink($mxDir . "\56\164\x61\162"); goto FO_r5; s0Dci: return $result; goto iA7bk; cTXiw: goto M86jP; goto rOkO8; XhhEC: @unlink($mxDir . "\56\x74\141\x72\x2e\x67\172"); goto GVr5q; Crgqk: if ($openDir && strpos($entry, "\56\x6d\155\144\142") !== false) { goto w1PT2; } goto Xihhu; rdZ_F: if (!in_array($entry, PATH_EXCLUDES) && is_dir($dir . $entry) && $openDir === false) { goto IZQto; } goto Crgqk; EXjkH: $this->saveMaxMindDatabase($dir . $entry, $download, true); goto vllxh; WVRd_: goto j2Bpn; goto Q1_o8; Vjtaz: $result = @copy($dir . SLASH . $entry, $downloadFile); goto cTXiw; Q1_o8: w1PT2: goto Vjtaz; jiScT: $result = false; goto Rzxze; k0yAR: if (!$handle) { goto xNJws; } goto fqAC1; UDxob: xNJws: goto GjZvC; tkLO4: goto JIXcQ; goto dzdKo; iA7bk: } public function updateMaxMindGeoIP(string $download = "\101\x53\x4e") { goto e3HVd; Ju0cX: if (!(file_exists($maxmindFile) && filesize($maxmindFile) > 0)) { goto NmFUj; } goto vrri3; e3HVd: session_write_close(); goto PiVEd; vrri3: try { goto TQnmC; Df61k: return $this->saveMaxMindDatabase(MAXMIND_PATH, $download); goto BZary; AkhLh: $pharTar = $pharGZ->decompress(); goto yI_HJ; TQnmC: $pharGZ = new \PharData($maxmindFile); goto AkhLh; yI_HJ: $pharTar->extractTo(MAXMIND_PATH, null, true); goto Df61k; BZary: } catch (\Exception $e) { createErrorLog([__FILE__, __FUNCTION__, $download, $maxmindFile, $e->getMessage()]); } goto x_xaO; ukgAb: $filename = strtolower($download); goto bSqt8; PiVEd: createDir(MAXMIND_PATH); goto ukgAb; x_xaO: NmFUj: goto TZ0dK; bSqt8: $maxmindFile = $this->downloadMaxMindDatabase(MAXMIND_PATH . $filename . "\56\x74\141\x72\56\x67\x7a", $download); goto Ju0cX; TZ0dK: return false; goto WWIOf; WWIOf: } public function getIP() : string { goto UWbq_; NEP9E: $ip = $_SERVER["\122\105\x4d\117\x54\x45\137\x41\x44\104\122"] ?? ''; goto zTJ2V; KMD2_: S9OBx: goto uPCCw; VkBST: $headers = ["\x48\124\x54\x50\137\x43\x46\137\x43\x4f\116\116\105\103\x54\111\x4e\107\x5f\x49\x50\126\x36", "\110\x54\x54\120\137\103\106\x5f\103\x4f\116\x4e\x45\x43\124\111\116\107\x5f\x49\120", "\x48\x54\124\x50\x5f\x58\x5f\106\x4f\122\127\x41\x52\x44\x45\104\137\106\x4f\x52", "\110\124\124\x50\137\x43\x4c\111\x45\116\x54\137\111\120", "\x48\124\124\120\x5f\130\137\x52\105\x41\x4c\x5f\111\x50", "\110\x54\124\x50\x5f\x52\105\115\117\x54\x45\x5f\x48\x4f\123\124", "\x48\124\x54\x50\x5f\124\x52\125\x45\137\103\x4c\x49\x45\x4e\124\x5f\111\120"]; goto hXPIu; NMng4: $ip = Helper::getServerIp(); goto KMD2_; UWbq_: session_write_close(); goto VkBST; hXPIu: foreach ($headers as $header) { goto xQYB_; jpbCv: WbzY4: goto xQfnV; uyn3W: return $ip; goto pDRSU; mvGjD: aCESm: goto jpbCv; xQYB_: if (!(isset($_SERVER[$header]) && !empty($_SERVER[$header]))) { goto aCESm; } goto u64Sf; b1X7t: if (!validateIp($ip)) { goto z0v1W; } goto uyn3W; pDRSU: z0v1W: goto mvGjD; u64Sf: $ip = trim(strtok($_SERVER[$header], "\54")); goto b1X7t; xQfnV: } goto CwP8G; zTJ2V: if (!($ip === "\x3a\72\x31" || $ip === "\61\62\x37\x2e\60\x2e\60\56\61")) { goto S9OBx; } goto NMng4; CwP8G: qdnag: goto NEP9E; uPCCw: return validateIp($ip); goto lzSwm; lzSwm: } public function getASNInfo(string $ip = '') { goto tbME9; UBluz: try { $record = $this->reader->asn($ip); return $record->jsonSerialize(); } catch (AddressNotFoundException|InvalidRequestException|Exception $e) { createErrorLog([__FILE__, __FUNCTION__, $ip, $e->getMessage()]); } goto En2QK; tbME9: session_write_close(); goto UBluz; En2QK: return null; goto zQWDF; zQWDF: } public function getASN(string $ip = '') { goto mNp0n; mNp0n: session_write_close(); goto qNf3k; qNf3k: $info = $this->getASNInfo($ip); goto huFqD; huFqD: return !empty($info["\141\x75\x74\157\x6e\x6f\x6d\157\x75\163\137\x73\x79\x73\164\x65\155\x5f\x6e\165\x6d\142\145\162"]) ? intval($info["\x61\x75\x74\157\x6e\x6f\x6d\x6f\x75\x73\x5f\163\x79\x73\x74\x65\x6d\x5f\156\x75\x6d\x62\x65\x72"]) : null; goto RrqRs; RrqRs: } public function getOrganization(string $ip = '') { goto JgFmh; JgFmh: session_write_close(); goto w4QJJ; mTt6b: return !empty($info["\x61\165\164\157\x6e\157\x6d\x6f\165\163\137\x73\x79\x73\x74\145\155\137\x6f\x72\x67\141\156\x69\172\x61\164\x69\x6f\156"]) ? trim($info["\x61\x75\164\157\156\x6f\155\x6f\x75\163\137\163\x79\163\164\145\155\x5f\x6f\162\147\141\x6e\151\172\x61\164\x69\157\x6e"]) : null; goto JiG7n; w4QJJ: $info = $this->getASNInfo($ip); goto mTt6b; JiG7n: } public function getPrefixLen(string $ip = '') { goto kCWw8; kCWw8: session_write_close(); goto h5lKq; h5lKq: $info = $this->getASNInfo($ip); goto zqIht; zqIht: return !empty($info["\x70\162\x65\x66\151\x78\137\x6c\145\x6e"]) ? intval($info["\160\162\145\x66\151\x78\137\x6c\145\x6e"]) : ''; goto ZPyKs; ZPyKs: } private function getCountryOrContinent(string $ip = '', string $column = "\143\157\165\156\x74\x72\x79") { session_write_close(); try { goto VqGfG; VqGfG: $record = $this->reader2->country($ip); goto Ir78N; NN61r: return $info[$column]["\143\x6f\144\x65"] ?? $info[$column]["\151\163\157\x5f\143\x6f\144\145"] ?? ''; goto GFoaJ; Ir78N: $info = $record->jsonSerialize(); goto NN61r; GFoaJ: } catch (AddressNotFoundException|InvalidRequestException|Exception $e) { createErrorLog([__FILE__, __FUNCTION__, "{$column}\72\x20{$ip}", $e->getMessage()]); return $column === "\x63\157\165\156\164\162\171" && !empty($_SERVER["\x48\124\x54\x50\137\x43\106\137\111\120\103\117\125\x4e\x54\122\x59"]) ? trim($_SERVER["\x48\124\124\x50\137\x43\x46\137\111\120\103\117\125\116\x54\x52\x59"]) : ''; } } public function getCountry(string $ip = '') { session_write_close(); return $this->getCountryOrContinent($ip, "\x63\157\x75\156\164\x72\171"); } public function getContinent(string $ip = '') { session_write_close(); return $this->getCountryOrContinent($ip, "\x63\x6f\156\x74\151\x6e\145\x6e\x74"); } }
