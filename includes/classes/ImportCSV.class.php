<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.16  |
    |              on 2025-05-18 20:27:36              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
Copyright @ 2020 - 2025 GDPlayer v4.7.1. https://gdplayer.to | https://t.me/gdplayerto
*/
 namespace GDPlayer; class ImportCSV { private \SplFileObject $spl; private string $file = ''; private array $header = []; private int $totalRows = 0; public function open(string $file) { goto z2Ojm; br32O: createErrorLog([__FILE__, __FUNCTION__, $file, "\x46\x69\154\x65\40\x74\x69\144\x61\x6b\40\x64\151\164\145\155\165\153\x61\156\40\141\x74\141\x75\40\164\x69\x64\x61\x6b\40\x64\141\x70\141\164\x20\144\151\142\141\x63\141\72\40{$file}"]); goto WJO6d; iF4fl: $this->spl = new \SplFileObject($this->file); goto uXLIA; EKu3W: $this->spl->rewind(); goto ibGGU; z2Ojm: session_write_close(); goto a3UcZ; r2dc6: $this->file = $file; goto iF4fl; ljkIZ: $this->totalRows = iterator_count($this->spl); goto EKu3W; a3UcZ: if (!(!file_exists($file) || !is_readable($file))) { goto YizSa; } goto br32O; uXLIA: $this->spl->setFlags(\SplFileObject::READ_CSV | \SplFileObject::READ_AHEAD | \SplFileObject::SKIP_EMPTY); goto BNLtO; DfdEZ: YizSa: goto r2dc6; BNLtO: $this->header = $this->spl->fgetcsv() ?: []; goto ljkIZ; WJO6d: return; goto DfdEZ; ibGGU: } public function getRows(int $offset = 0, int $length = 10) : \Generator { goto iIh5J; IP5mc: goto j0O4Z; goto hkLiT; P4S8h: if (in_array("\166\151\x64\145\157\137\x75\x72\x6c", $row)) { goto WpXHI; } goto gnEXr; hkLiT: pIPr5: goto iD4d2; NVt3P: WpXHI: goto IP5mc; uRxD0: $count++; goto NVt3P; sc_Hk: if (!(!$this->spl->eof() && $count < $length)) { goto pIPr5; } goto ImUVX; rGj2I: $this->spl->seek($offset); goto UXq5o; dX6SC: MzoAa: goto P4S8h; I1Vd3: j0O4Z: goto sc_Hk; UXq5o: $count = 0; goto I1Vd3; ryOh7: goto j0O4Z; goto dX6SC; iIh5J: session_write_close(); goto rGj2I; M6vV0: if (!(!is_array($row) || empty(array_filter($row, "\163\x74\162\154\145\x6e")))) { goto MzoAa; } goto ryOh7; gnEXr: (yield $row); goto uRxD0; ImUVX: $row = $this->spl->fgetcsv(); goto M6vV0; iD4d2: } public function getRowsWithHeader(int $offset = 0, int $length = 10) : array { goto LacdL; LacdL: session_write_close(); goto S7reh; EQ6ip: return $result; goto IpVvk; udIRS: ssMqM: goto EQ6ip; nXYQn: $allowMultiColumns = ["\x76\x69\x64\145\157\137\x75\x72\x6c", "\x73\x75\x62\x74\151\x74\154\145\x5f\154\141\142\145\154", "\x73\x75\142\164\x69\x74\154\x65\137\165\x72\154"]; goto d6nys; d6nys: foreach ($this->getRows($offset, $length) as $row) { goto ukUPn; ixHj_: D0qtK: goto T58Fd; R0n4E: foreach ($row as $i => $value) { goto yjvy4; vjmTU: DCFoU: goto fQK1i; fpVpC: goto llCC0; goto vjmTU; zsEHt: bw4X0: goto Emp9T; Ud1pE: $newRow[$column] = $value; goto pHM2a; LjcZY: if (in_array($column, $allowMultiColumns)) { goto OLf2K; } goto Ud1pE; yjvy4: if (isset($this->header[$i])) { goto DCFoU; } goto fpVpC; fQK1i: $column = $this->header[$i]; goto LjcZY; Emp9T: llCC0: goto W4erS; pHM2a: goto bw4X0; goto guEua; W9Aiz: $newRow[$column][] = $value; goto zsEHt; guEua: OLf2K: goto W9Aiz; W4erS: } goto qhxIM; nnklx: $result[] = $newRow; goto ixHj_; qhxIM: UVhOJ: goto nnklx; ukUPn: $newRow = []; goto R0n4E; T58Fd: } goto udIRS; S7reh: $result = []; goto nXYQn; IpVvk: } public function getTotalRows() : int { session_write_close(); return $this->totalRows; } }
