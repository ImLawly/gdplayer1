<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.16  |
    |              on 2025-05-18 20:27:33              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
Copyright @ 2020 - 2025 GDPlayer v4.7.1. https://gdplayer.to | https://t.me/gdplayerto
*/
 namespace GDPlayer; use GDPlayer\Security; abstract class Ajax { protected Security $security; protected $currentUser = false; protected $data = []; protected $files = []; protected $isAdmin = false; protected $epeMelemek = false; const STATUS_OK = "\x6f\x6b"; const STATUS_FAIL = "\146\x61\151\x6c"; const MESSAGE_UNAUTHORIZE = "\x59\x6f\165\40\x61\162\x65\40\156\x6f\x74\x20\x61\165\x74\x68\x6f\162\x69\172\145\x64\40\164\x6f\x20\141\x63\143\145\x73\163\x20\x74\150\151\x73\40\146\145\141\164\x75\x72\x65"; const MESSAGE_NOT_EXIST = "\x57\x68\x61\164\x20\144\157\40\171\x6f\165\x20\x77\141\x6e\x74\77"; const MESSAGE_INVALID = "\111\156\x76\141\x6c\x69\144\40\x70\141\x72\x61\x6d\x65\164\145\162\x73"; const MESSAGE_STATUS_INVALID = "\x49\x6e\x76\x61\154\x69\x64\40\163\164\x61\164\165\x73"; protected function loadData() { goto iFfFI; iFfFI: session_write_close(); goto x0556; sgnBh: $this->epeMelemek = $this->security->mekNgumbe(); goto LFnNG; x0556: $this->security = new Security(); goto sgnBh; rKRtL: $this->isAdmin = $this->currentUser && intval($this->currentUser["\162\x6f\154\145"]) === 0; goto Rebtq; LFnNG: $this->currentUser = currentUser($this->getToken()); goto rKRtL; Rebtq: } protected function loadAction($class) { goto CWeuQ; UVUKq: $action = $this->data["\x61\x63\164\151\x6f\156"]; goto UkpEF; Q8tDz: goto MomSe; goto x1vvc; I4iAr: return $result; goto VzN8m; CWeuQ: session_write_close(); goto oNM3G; UkpEF: $result = $class->{$action}(); goto nl1qF; oNM3G: if (isset($this->data["\141\x63\164\151\x6f\x6e"]) && method_exists($class, $this->data["\141\143\164\x69\157\x6e"])) { goto NzOX_; } goto OkUGD; x1vvc: NzOX_: goto UVUKq; nl1qF: MomSe: goto I4iAr; OkUGD: $result = $this->notValid(); goto Q8tDz; VzN8m: } public function response() { session_write_close(); return $this->createJsonResponse(json_encode([])); } public function list() { session_write_close(); return $this->response(); } protected function defaultResponse($class, bool $adminValidation = false) { goto iXkIL; OaoKb: if ($this->currentUser) { goto VVlXT; } goto W6OaX; T7dH5: if ($adminValidation && !$this->isAdmin) { goto YjLJ1; } goto OaoKb; KjWxI: UL2gL: goto tONtL; C3D4_: $result = $this->notAuthorize(); goto t1qiy; YeAYX: VVlXT: goto oGjx2; tONtL: return $this->createJsonResponse($result); goto fRn2A; W6OaX: $result = $this->notAuthorize(); goto sjBgH; BSUzM: YjLJ1: goto C3D4_; iXkIL: session_write_close(); goto T7dH5; sjBgH: goto UL2gL; goto BSUzM; t1qiy: goto UL2gL; goto YeAYX; oGjx2: $result = $this->loadAction($class); goto KjWxI; fRn2A: } protected function getToken() { goto ZazJR; Tlfs4: if (!empty($_SERVER["\110\124\124\120\137\x41\x55\124\110\x4f\x52\111\132\x41\x54\x49\x4f\116"])) { goto QSp8P; } goto S2DR5; qLkPn: $ex = explode("\40", $_SERVER["\110\124\124\120\x5f\101\x55\x54\110\117\x52\x49\x5a\x41\x54\111\117\x4e"], 2); goto MI9NY; M7Y7o: goto OAVrO; goto F2p7c; npjh3: return $result; goto RQJ9A; S2DR5: goto OAVrO; goto AaX4d; ehHGm: QSp8P: goto qLkPn; F2p7c: Ps1s2: goto MIVvq; MIVvq: $result = rawurldecode($_COOKIE["\x61\x64\x76\x5f\164\157\153\145\x6e"]); goto Q07Md; AaX4d: SsRzA: goto LS5Z2; aGoiN: if (!empty($this->data["\x74\x6f\153\145\156"])) { goto SsRzA; } goto VvdiT; ZazJR: session_write_close(); goto uQvOa; MI9NY: $result = end($ex); goto FwoBQ; VvdiT: if (!empty($_COOKIE["\x61\144\x76\137\164\x6f\x6b\145\156"])) { goto Ps1s2; } goto Tlfs4; Q07Md: goto OAVrO; goto ehHGm; uQvOa: $result = ''; goto aGoiN; FwoBQ: OAVrO: goto npjh3; LS5Z2: $result = rawurldecode($this->data["\164\157\x6b\x65\x6e"]); goto M7Y7o; RQJ9A: } protected function tableValidation(int $id = 0, string $colId = "\x69\144", ?Model $table = null) { goto EPcrk; nnsmc: nhlqK: goto zMQGV; TQCL2: BY3FF: goto cOdef; EPcrk: session_write_close(); goto BF7ty; jQHcy: if ($this->isAdmin) { goto nhlqK; } goto zpcV0; BF7ty: if (!$table instanceof Model) { goto BY3FF; } goto jQHcy; uht02: goto PxfVV; goto nnsmc; zMQGV: $table->setCriteria($colId, $id, "\75"); goto p4YkM; p4YkM: PxfVV: goto TQCL2; zpcV0: $table->setMultiCriteria([[$colId, $id, "\75"], ["\x75\x69\x64", $this->currentUser["\151\144"], "\75", "\x41\116\x44"]]); goto uht02; cOdef: } protected function extractDatatablesQry(array $get = [], array $columns = [], string $defaultOrderBy = '', string $defaultOrderDir = "\x61\x73\143") { goto UO2zP; CCfK5: $orderByInt = sanitizeInt($get["\157\162\x64\145\x72"][0]["\x63\x6f\x6c\x75\x6d\x6e"] ?? 0); goto IsR4W; UO2zP: session_write_close(); goto CCfK5; IsR4W: return ["\x64\x72\x61\x77" => sanitizeInt($get["\x64\x72\141\167"] ?? 1), "\x73\164\141\x72\x74" => sanitizeInt($get["\163\164\x61\162\164"] ?? 0), "\x6c\145\156\x67\164\150" => sanitizeInt($get["\154\145\x6e\147\164\150"] ?? 10), "\163\145\x61\x72\143\x68" => sanitizeHtml($get["\x73\x65\x61\x72\x63\x68"]["\166\141\x6c\x75\145"] ?? ''), "\157\x72\x64\x65\162\x42\x79" => $columns[$orderByInt] ?? $defaultOrderBy, "\x6f\x72\144\145\x72\104\151\x72" => sanitizeHtml($get["\x6f\x72\x64\x65\162"][0]["\x64\151\x72"] ?? $defaultOrderDir)]; goto alILL; alILL: } public function createJsonResponse(string $json = '') { goto qYaZW; iOJUz: $headers = corsResponseHeaders(); goto O1mc1; O1mc1: $headers[] = "\x43\157\156\x74\145\156\164\55\x54\x79\160\145\72\x20\x61\x70\160\154\151\x63\x61\164\151\x6f\156\x2f\x6a\x73\157\x6e\x3b\x20\143\x68\x61\162\163\145\x74\75\165\x74\146\x2d\x38"; goto dMZI1; pUclN: return $json; goto x_fNN; dMZI1: createResponseHeaders($headers); goto pUclN; qYaZW: session_write_close(); goto iOJUz; x_fNN: } public function toDataTablesJson(int $draw = 1, array $data = [], int $recordsTotal = 0, int $recordsFiltered = 0) { goto ir1_R; mxds9: $recordsFiltered = 0; goto rv_Lf; kT5uz: ZCjlQ: goto X2PdA; fW7se: $data = []; goto mxds9; E9sYf: if ($this->epeMelemek) { goto ZCjlQ; } goto fW7se; X2PdA: return (string) json_encode(["\144\162\x61\167" => $draw, "\144\x61\x74\141" => $data, "\162\145\143\x6f\162\x64\x73\124\157\164\141\154" => $recordsTotal, "\162\x65\143\157\x72\144\163\106\x69\154\x74\x65\x72\x65\144" => $recordsFiltered]); goto c7ev8; ir1_R: session_write_close(); goto E9sYf; rv_Lf: $recordsTotal = 0; goto kT5uz; c7ev8: } public function toJson(int $status = 0, string $message = '', $result = null) { goto oAQgH; RzZTp: return (string) json_encode(["\163\x74\141\x74\165\x73" => $status, "\155\x65\163\163\141\x67\145" => $message, "\162\145\163\x75\154\164" => $result]); goto aF5p1; MLf5y: UfPpj: goto RzZTp; Jh86Y: goto UfPpj; goto tZDnA; IMlxN: $result = null; goto Jh86Y; tZDnA: A0fkv: goto ZBPiS; gncb7: if ($this->epeMelemek) { goto A0fkv; } goto YZbMy; YZbMy: $status = self::STATUS_FAIL; goto IMlxN; oAQgH: session_write_close(); goto gncb7; ZBPiS: $status = $status === 1 ? self::STATUS_OK : self::STATUS_FAIL; goto MLf5y; aF5p1: } public function toCustomJson(array $result = []) { session_write_close(); return (string) json_encode($this->epeMelemek ? $result : []); } public function notAuthorize() { session_write_close(); return $this->toJson(0, self::MESSAGE_UNAUTHORIZE); } public function notValid() { session_write_close(); return $this->toJson(0, self::MESSAGE_INVALID); } public function notExist() { session_write_close(); return $this->toJson(0, self::MESSAGE_NOT_EXIST); } }
